{"name":"Prequel","tagline":"A tool for linting SQL files for Microsoft SQL Server.","body":"### Prequel.\r\n\r\nPrequel was born out of working on a product which contains a large number of database schemas and stored procedures. Every so often, a really basic error would be accidentally committed to the repository - sometimes, the SQL wouldn't even compile. This wasn't caught until tests were run, which seemed wasteful. So I wanted a tool I could run on plain .sql files and integrate into the build system so that it would catch syntax errors and other errors earlier.\r\n\r\n## Basic Usage\r\nSay you have a file foo.sql which contains:\r\n\r\n    create procedure sp_foo as \r\n\t    declare @myvar as int\r\n\t    set @mvar = 2\r\n    go\r\n\r\nYou can run prequel like so:\r\n\r\n    PS C:\\> .\\Prequel.exe /warn:3 foo.sql\r\n\r\nAnd it will print out\r\n\r\n    Prequel version 0.1.0.0\r\n    Warnings:\r\n    c:\\users\\edwin\\desktop\\sqlquery2.sql(1) : WARNING 4 : Procedure sp_foo should not be named with the prefix 'sp_'\r\n    c:\\users\\edwin\\desktop\\sqlquery2.sql(3) : WARNING 1 : Variable @mvar used before being declared\r\n    c:\\users\\edwin\\desktop\\sqlquery2.sql(1) : WARNING 3 : Procedure sp_foo does not SET NOCOUNT ON\r\n    c:\\users\\edwin\\desktop\\sqlquery2.sql(2) : WARNING 2 : Variable @myvar declared but never used\r\n\r\n## Status\r\nThe tool works, but has a very small set of cases that it will detect so far.\r\n\r\n## Authors and Contributors\r\n@edyoung. Suggestions and improvements very welcome.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}